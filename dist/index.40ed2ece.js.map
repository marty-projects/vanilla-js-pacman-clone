{"mappings":"kpBAsBA,IAAAA,EACAC,E,iFArBA,IAAIC,EAAU,GAoBdF,EAlBA,SAAkBG,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BJ,EAAQE,EAAKE,IAAMH,EAAMC,EAAKE,G,EAelCL,EAXA,SAAiBO,GACf,IAAIC,EAAWP,EAAQM,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAIC,MAAM,oCAAsCF,GAGxD,OAAOC,C,KCnBTE,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,iSCAlD,MAEMC,EAAa,CACxBC,UAAW,CACTC,KAAM,GACNC,UAAU,EACVC,SAAU,KAEZC,QAAS,CACPH,KAAM,GACNC,UAVqB,GAWrBC,SAAU,KAEZE,WAAY,CACVJ,KAAM,GACNC,SAAU,EACVC,SAAU,GAEZG,UAAW,CACTL,KAAM,GACNC,SApBqB,GAqBrBC,SAAU,KAIDI,EAAc,CACzBC,MAAO,QACPC,KAAM,OACNC,IAAK,MACLC,OAAQ,SACRC,MAAO,QACPC,KAAM,OACNC,MAAO,QACPC,KAAM,OACNC,OAAQ,SACRC,MAAO,QACPC,OAAQ,SACRC,UAAW,QAIAC,EAAa,CACxBb,EAAYC,MACZD,EAAYE,KACZF,EAAYG,IACZH,EAAYI,OACZJ,EAAYK,MACZL,EAAYM,KACZN,EAAYO,MACZP,EAAYQ,KACZR,EAAYS,OACZT,EAAYY,WAIDE,EAAQ,CACnB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAA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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-cff58cb73a6de780.js","setup.js","GhostMoves.js","Gameboard.js","Pacman.js","Ghost.js","node_modules/@parcel/runtime-js/lib/runtime-88bd9420b2016496.js","node_modules/@parcel/runtime-js/lib/runtime-0c755d8240936038.js","node_modules/@parcel/runtime-js/lib/runtime-255b146a220f1ac0.js","node_modules/@parcel/runtime-js/lib/runtime-3547d817b5c62a01.js","node_modules/@parcel/runtime-js/lib/runtime-8119b0527558430e.js","index.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"2BF4I\\\":\\\"index.40ed2ece.js\\\",\\\"bh2Wq\\\":\\\"munch.cf16ce27.mp3\\\",\\\"aCJjn\\\":\\\"pill.37250d80.mp3\\\",\\\"hm2FA\\\":\\\"game_start.6c76d58f.mp3\\\",\\\"jPpmz\\\":\\\"death.ce88f37f.mp3\\\",\\\"2AP9z\\\":\\\"eat_ghost.0e274b38.mp3\\\"}\"));","export const GRID_SIZE = 20;\nexport const CELL_SIZE = 20;\nexport const DIRECTIONS = {\n  ArrowLeft: {\n    code: 37,\n    movement: -1,\n    rotation: 180\n  },\n  ArrowUp: {\n    code: 38,\n    movement: -GRID_SIZE,\n    rotation: 270\n  },\n  ArrowRight: {\n    code: 39,\n    movement: 1,\n    rotation: 0\n  },\n  ArrowDown: {\n    code: 40,\n    movement: GRID_SIZE,\n    rotation: 90\n  }\n};\n\nexport const OBJECT_TYPE = {\n  BLANK: 'blank',\n  WALL: 'wall',\n  DOT: 'dot',\n  BLINKY: 'blinky',\n  PINKY: 'pinky',\n  INKY: 'inky',\n  CLYDE: 'clyde',\n  PILL: 'pill',\n  PACMAN: 'pacman',\n  GHOST: 'ghost',\n  SCARED: 'scared',\n  GHOSTLAIR: 'lair'\n};\n\n// Lookup array for classes\nexport const CLASS_LIST = [\n  OBJECT_TYPE.BLANK,\n  OBJECT_TYPE.WALL,\n  OBJECT_TYPE.DOT,\n  OBJECT_TYPE.BLINKY,\n  OBJECT_TYPE.PINKY,\n  OBJECT_TYPE.INKY,\n  OBJECT_TYPE.CLYDE,\n  OBJECT_TYPE.PILL,\n  OBJECT_TYPE.PACMAN,\n  OBJECT_TYPE.GHOSTLAIR\n];\n\n// prettier-ignore\nexport const LEVEL = [\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n  1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1,\n  1, 7, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 7, 1,\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n  1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1,\n  1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1,\n  1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1,\n  0, 0, 0, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 1, 0, 0, 0,\n  0, 0, 0, 1, 2, 1, 2, 1, 9, 9, 9, 9, 1, 2, 1, 2, 1, 0, 0, 0,\n  1, 1, 1, 1, 2, 1, 2, 1, 9, 9, 9, 9, 1, 2, 1, 2, 1, 1, 1, 1, \n  1, 0, 0, 0, 2, 2, 2, 1, 9, 9, 9, 9, 1, 2, 2, 2, 0, 0, 0, 1, \n  1, 1, 1, 1, 2, 1, 2, 1, 9, 9, 9, 9, 1, 2, 1, 2, 1, 1, 1, 1, \n  0, 0, 0, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 0, 0, 0,\n  0, 0, 0, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 2, 1, 2, 1, 0, 0, 0,\n  1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1,\n  1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1,\n  1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1,\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n  1, 7, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 7, 1,\n  1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1,\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n];\n","import { DIRECTIONS, OBJECT_TYPE } from \"./setup\";\n\nexport function randomMovement(position, direction, objectExtists) {\n    let dir = direction;\n    let nextMovePos = position + dir.movement;\n    //create an array with the keys from the DIRECTIONS object\n    const keys = Object.keys(DIRECTIONS);\n    while (\n        objectExtists(nextMovePos, OBJECT_TYPE.WALL) ||\n        objectExtists(nextMovePos, OBJECT_TYPE.GHOST)\n    ) {\n        //get a random key from the array\n        const key = keys[Math.floor(Math.random() * keys.length)];\n        //set the next move\n        dir = DIRECTIONS[key];\n        nextMovePos = position + dir.movement;\n    }\n    return {nextMovePos, direction: dir};\n} ","import { GRID_SIZE, CELL_SIZE, OBJECT_TYPE, CLASS_LIST } from './setup';\n\nclass Gameboard {\n    constructor(DOMGrid) {\n        this.dotCount = 0;\n        this.grid = [];\n        this.DOMGrid = DOMGrid;\n    }\n    showGameStatus(gameWin) {\n        const div = document.createElement('div');\n        div.classList.add('game-status');\n        div.innerHTML = `${gameWin ? 'WIN!' : 'GAME OVER'}`;\n        this.DOMGrid.appendChild(div);\n    }\n    createGrid(level) {\n        this.dotCount = 0;\n        this.grid = [];\n        this.DOMGrid.innerHTML = ' ';\n        this.DOMGrid.style.cssText = `grid-template-columns: repeat(${GRID_SIZE}, ${CELL_SIZE}px)`;\n        level.forEach((square) => {\n            const div = document.createElement('div');\n            div.classList.add('square', CLASS_LIST[square]);\n            div.style.cssText = `width: ${CELL_SIZE}px; height: ${CELL_SIZE}px;`;\n            this.DOMGrid.appendChild(div);\n            this.grid.push(div);\n            if (CLASS_LIST[square] === OBJECT_TYPE.DOT) this.dotCount++;\n        });\n    }\n    addObject(pos, classes) {\n        this.grid[pos].classList.add(...classes);\n    }\n    removeObject(pos, classes) {\n        this.grid[pos].classList.remove(...classes);\n    }\n    objectExists = (pos, object) => {\n        return this.grid[pos].classList.contains(object);\n    }\n    rotateDiv(pos, deg) {\n        this.grid[pos].style.transform = `rotate(${deg}deg)`;\n    }\n    moveCharacter(character) { \n        if(character.shouldMove()) {\n            const {nextMovePos, direction } = character.getNextMove(\n                this.objectExists\n            );\n            const {classesToRemove, classesToAdd} = character.makeMove();\n            if(character.rotation && nextMovePos !== character.pos) {\n                this.rotateDiv(nextMovePos, character.dir.rotation);\n                this.rotateDiv(character.pos, 0);\n            }\n            this.removeObject(character.pos, classesToRemove);\n            this.addObject(nextMovePos, classesToAdd);\n            character.setNewPos(nextMovePos, direction);\n        }\n    }\n    static createGameboard(DOMGrid, level) {\n        const board = new this(DOMGrid);\n        board.createGrid(level);\n        return board;\n    }\n}\n\nexport default Gameboard;","import { OBJECT_TYPE, DIRECTIONS } from \"./setup\";\n\nclass Pacman {\n    constructor(speed, startPos) {\n        this.pos = startPos;\n        this.speed = speed;\n        this.dir = null;\n        this.timer = 0;\n        this.powerPill = false;\n        this.rotation = true;\n    }\n    shouldMove() {\n        if(!this.dir) return false;\n        if(this.timer === this.speed) {\n            this.timer = 0;\n            return true;\n        }\n        this.timer++\n    }\n    getNextMove(objectExists) {\n        let nextMovePos = this.pos + this.dir.movement;\n        if( objectExists(nextMovePos, OBJECT_TYPE.WALL) || \n            objectExists(nextMovePos, OBJECT_TYPE.GHOSTLAIR)) {\n                nextMovePos = this.pos;\n            }\n            return { nextMovePos, direction: this.dir };\n    }\n    makeMove() {\n        const classesToRemove = [OBJECT_TYPE.PACMAN];\n        const classesToAdd = [OBJECT_TYPE.PACMAN];\n        return{classesToRemove, classesToAdd}\n    }\n    setNewPos(nextMovePos) {\n        this.pos = nextMovePos;\n    }\n    handleKeyInput(e, objectExists) {\n        let dir; \n        if(e.keyCode >= 37 && e.keyCode <= 40) {\n            dir = DIRECTIONS[e.key];\n        } else {\n            return;\n        }\n        const nextMovePos = this.pos + dir.movement;\n        if(objectExists(nextMovePos, OBJECT_TYPE.WALL) || \n           objectExists(nextMovePos, OBJECT_TYPE.GHOSTLAIR)\n            ) return;\n        this.dir = dir;\n    }\n}\nexport default Pacman;","import { DIRECTIONS, OBJECT_TYPE } from \"./setup\";\nclass Ghost {\n    constructor(speed = 5, startPos, movement, name) {\n        this.name = name;\n        this.movement = movement;\n        this.startPos = startPos;\n        this.pos = startPos;\n        this.dir = DIRECTIONS.ArrowRight;\n        this.speed = speed;\n        this.timer = 0;\n        this.isScared = false;\n        this.rotation = false;\n    }\n    shouldMove() {\n        if(this.timer === this.speed) {\n            this.timer = 0;\n            return true;\n        }\n        this.timer++;\n        return false;\n    }\n    getNextMove(objectExists) {\n        const {nextMovePos, direction} = this.movement(\n            this.pos,\n            this.dir,\n            objectExists\n        );\n        return {nextMovePos, direction};\n    }\n    makeMove() {\n        const classesToRemove = [OBJECT_TYPE.GHOST, OBJECT_TYPE.SCARED, this.name]\n        let classesToAdd = [OBJECT_TYPE.GHOST, this.name];\n        if (this.isScared) classesToAdd = [...classesToAdd, OBJECT_TYPE.SCARED];\n        return {classesToRemove, classesToAdd};\n    }\n    setNewPos(nextMovePos, direction) {\n        this.pos = nextMovePos;\n        this.dir = direction;\n\n    }\n}\nexport default Ghost;","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"bh2Wq\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"aCJjn\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"hm2FA\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"jPpmz\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"2AP9z\")).toString();","import {LEVEL, OBJECT_TYPE} from './setup.js';\nimport { randomMovement } from './GhostMoves.js';\n\nimport Gameboard from './Gameboard.js';\nimport Pacman from './Pacman.js';\nimport Ghost from './Ghost.js';\n\nimport soundDot from './static/sounds/munch.mp3';\nimport soundPill from './static/sounds/pill.mp3';\nimport soundGameStart from './static/sounds/game_start.mp3';\nimport soundGameOver from './static/sounds/death.mp3';\nimport soundGhost from './static/sounds/eat_ghost.mp3';\n\n//DOM\nconst gameGrid = document.querySelector('#game');\nconst scoreTable = document.querySelector('#score');\nconst startButton = document.querySelector('#start-button');\n\n//Constants\nconst POWER_PILL_TIME = 10000;\nconst GLOBAL_SPEED = 80;\nconst gameboard = Gameboard.createGameboard(gameGrid, LEVEL);\n\n//Initialize\nlet score = 0;\nlet timer = null;\nlet gameWin = false;\nlet powerPillActive = false;\nlet powerPillTimer = null;\n//AUDIO\nfunction playAudio(audio) {\n    const soundEffect = new Audio(audio);\n    soundEffect.play();\n}\n//GAME CONTROLLER\nfunction gameOver(pacman) {\n    playAudio(soundGameOver);\n    document.removeEventListener('keydown', (e) => \n        pacman.handleKeyInput(e, gameboard.objectExists.bind(gameboard))\n    );\n    gameboard.showGameStatus(gameWin);\n    clearInterval(timer);\n    startButton.classList.remove('hide');\n};\n\nfunction checkCollision(pacman, ghosts) {\n    const collidedGhost = ghosts.find(ghost => pacman.pos === ghost.pos);\n    if(collidedGhost) {\n        if(pacman.powerPill) {\n            playAudio(soundGhost);\n            gameboard.removeObject(collidedGhost.pos, [\n                OBJECT_TYPE.GHOST,\n                OBJECT_TYPE.SCARED,\n                collidedGhost.name\n            ]);\n            collidedGhost.pos = collidedGhost.startPos;\n            score += 100;\n        } else {\n        gameboard.removeObject(pacman.pos, [OBJECT_TYPE.PACMAN]);\n        gameboard.rotateDiv(pacman.pos,0);\n        gameOver(pacman,gameGrid);\n        }\n    }\n}\n\nfunction gameLoop(pacman, ghosts) {\n    gameboard.moveCharacter(pacman);\n    ghosts.forEach((ghost) => gameboard.moveCharacter(ghost))\n    checkCollision(pacman,ghosts);\n\n    if (gameboard.objectExists(pacman.pos, OBJECT_TYPE.DOT)) {\n        playAudio(soundDot);\n        gameboard.removeObject(pacman.pos, [OBJECT_TYPE.DOT]);\n        gameboard.dotCount--;\n        score += 10;\n    }\n\n    if (gameboard.objectExists(pacman.pos, OBJECT_TYPE.PILL)) {\n        playAudio(soundPill);\n        gameboard.removeObject(pacman.pos, [OBJECT_TYPE.PILL]);\n        pacman.powerPill = true;\n        score += 50;\n        clearTimeout(powerPillTimer);\n        powerPillTimer = setTimeout(\n            () => \n                () => (pacman.powerPill = false),\n                POWER_PILL_TIME\n        );\n    }\n    if (pacman.powerPill !== powerPillActive) {\n        powerPillActive = pacman.powerPill;\n        ghosts.forEach(ghost => (ghost.isScared = pacman.powerPill));\n    }\n    if(gameboard.dotCount === 0) {\n        gameWin = true;\n        gameOver(pacman, ghosts);\n    }\n    scoreTable.innerHTML = score;\n}\nfunction startGame() {\n    playAudio(soundGameStart);\n    gameWin =false;\n    powerPillActive = false;\n    score= 0;\n    startButton.classList.add('hide');\n    gameboard.createGrid(LEVEL);\n    const pacman = new Pacman(2, 287);\n    gameboard.addObject(287, [OBJECT_TYPE.PACMAN]);\n    document.addEventListener('keydown', (e) => \n        pacman.handleKeyInput(e, gameboard.objectExists));\n    const ghosts = [\n        new Ghost(5, 188, randomMovement, OBJECT_TYPE.BLINKY),\n        new Ghost(4, 209, randomMovement, OBJECT_TYPE.PINKY),\n        new Ghost(3, 230, randomMovement, OBJECT_TYPE.INKY),\n        new Ghost(2, 251, randomMovement, OBJECT_TYPE.CLYDE)\n    ];\n    timer = setInterval(() => gameLoop(pacman, ghosts), GLOBAL_SPEED)\n}\n//Start\n\nstartButton.addEventListener('click', startGame)\n\n"],"names":["$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$fd2cafe1b5d4747c$export$4aabe0d20c9c03b3","ArrowLeft","code","movement","rotation","ArrowUp","ArrowRight","ArrowDown","$fd2cafe1b5d4747c$export$852b3d7559c48ae8","BLANK","WALL","DOT","BLINKY","PINKY","INKY","CLYDE","PILL","PACMAN","GHOST","SCARED","GHOSTLAIR","$fd2cafe1b5d4747c$export$19cc2a5451235cae","$fd2cafe1b5d4747c$export$5391a00aef7012c6","$1c0a8937406d3d77$export$44b6179c6c33dab2","position","direction","objectExtists","dir","nextMovePos","key","Math","floor","random","$dbf4608c65c5154f$export$2e2bcd8739ae039","constructor","DOMGrid","this","dotCount","grid","showGameStatus","gameWin","div","document","createElement","classList","add","innerHTML","appendChild","createGrid","level","style","cssText","forEach","square","push","addObject","pos","classes","removeObject","remove","objectExists","object","contains","rotateDiv","deg","transform","moveCharacter","character","shouldMove","getNextMove","classesToRemove","classesToAdd","makeMove","setNewPos","static","board","$52625ec7f7caf5e4$export$2e2bcd8739ae039","speed","startPos","timer","powerPill","handleKeyInput","e","keyCode","$cc7f4c11cad61834$export$2e2bcd8739ae039","name","isScared","$0be1a3cd044badfe$exports","URL","resolve","import","meta","url","toString","$ac15c2c0891b02f1$exports","$ab61c0a2afca7087$exports","$04c6e2ab40750832$exports","$d9e5631b1b782ba8$exports","$dad545c909cfec2d$var$gameGrid","querySelector","$dad545c909cfec2d$var$scoreTable","$dad545c909cfec2d$var$startButton","$dad545c909cfec2d$var$gameboard","createGameboard","$dad545c909cfec2d$var$score","$dad545c909cfec2d$var$timer","$dad545c909cfec2d$var$gameWin","$dad545c909cfec2d$var$powerPillActive","$dad545c909cfec2d$var$powerPillTimer","$dad545c909cfec2d$var$playAudio","audio","Audio","play","$dad545c909cfec2d$var$gameOver","pacman","$parcel$interopDefault","removeEventListener","bind","clearInterval","$dad545c909cfec2d$var$gameLoop","ghosts","ghost","collidedGhost","find","$dad545c909cfec2d$var$checkCollision","clearTimeout","setTimeout","addEventListener","setInterval"],"version":3,"file":"index.40ed2ece.js.map"}